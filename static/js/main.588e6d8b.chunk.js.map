{"version":3,"sources":["redux/transactionsSlice.js","components/NewTransaction.js","components/History.js","components/Balance.js","App.js","redux/store.js","index.js"],"names":["transactionsAdapter","createEntityAdapter","initialState","getInitialState","transactionsSlice","createSlice","name","reducers","addNewTransaction","reducer","state","payload","addOne","prepare","title","amount","id","nanoid","removeTransaction","removeOne","actions","selectAllTransactions","getSelectors","transactions","selectAll","NewTransaction","useState","setTitle","setAmount","titleInput","useRef","dispatch","useDispatch","className","htmlFor","type","placeholder","value","onChange","event","target","ref","onClick","preventDefault","current","focus","History","allTransactions","useSelector","map","transaction","key","toString","includes","handleRemoveTransaction","length","Balance","transactionAmount","expenses","filter","reduce","acc","income","balance","toFixed","App","transactionReducer","store","configureStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.588e6d8b.chunk.js","sourcesContent":["import {createSlice, createEntityAdapter, nanoid} from \"@reduxjs/toolkit\";\r\n\r\nconst transactionsAdapter = createEntityAdapter();\r\nconst initialState = transactionsAdapter.getInitialState();\r\n\r\nconst transactionsSlice = createSlice({\r\n    name: \"transaction\",\r\n    initialState,\r\n    reducers: {\r\n        addNewTransaction: {\r\n            reducer (state, payload) {\r\n                transactionsAdapter.addOne(state, payload)\r\n            },\r\n            prepare (title, amount) {\r\n                return {\r\n                    payload: {\r\n                        id: nanoid(),\r\n                        title,\r\n                        amount\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        removeTransaction: {\r\n            reducer (state, {payload}) {\r\n                \r\n                transactionsAdapter.removeOne(state, payload.id);\r\n            },\r\n            prepare (id) {\r\n                return {\r\n                    payload: {\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default transactionsSlice.reducer;\r\nexport const {addNewTransaction, removeTransaction} = transactionsSlice.actions;\r\n\r\nexport const {\r\n    selectAll: selectAllTransactions,\r\n} = transactionsAdapter.getSelectors(state => state.transactions);","import React, { useState, useRef } from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { addNewTransaction } from \"../redux/transactionsSlice\";\r\n\r\nexport const NewTransaction = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const titleInput = useRef(null);\r\n\r\n    const handleTitleChange = event => setTitle(event.target.value);\r\n    const handleAmountChange = event => setAmount(event.target.value);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddNewTransaction = event => {\r\n        event.preventDefault();\r\n\r\n        if (title === \"\" || amount === \"\") {return}\r\n        dispatch(addNewTransaction(title, +amount));\r\n\r\n        setTitle(\"\");\r\n        setAmount(\"\");\r\n\r\n        titleInput.current.focus();\r\n    };\r\n\r\n    return (\r\n        <section className=\"stack\">\r\n            <h2>Add New Transaction</h2>\r\n            <hr/>\r\n            <form className=\"transaction stack\">\r\n                <label htmlFor=\"title\">Transaction Name: </label>\r\n                <input\r\n                    id=\"title\"\r\n                    className=\"box\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Transaction Name...\"\r\n                    value={title}\r\n                    onChange={handleTitleChange}\r\n                    ref={titleInput}\r\n                />\r\n\r\n                <label htmlFor=\"amount\">Amount:<br/><p className=\"instructions\">Negative value: Expense || Positive Value: Income</p></label>\r\n                <input\r\n                    id=\"amount\"\r\n                    className=\"box\"\r\n                    type=\"number\"\r\n                    placeholder=\"Enter Amount...\"\r\n                    value={amount}\r\n                    onChange={handleAmountChange}\r\n                />\r\n                <button onClick={handleAddNewTransaction} className=\"box\">Add Transaction</button>\r\n            </form>\r\n        </section>\r\n    );\r\n};","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAllTransactions, removeTransaction } from \"../redux/transactionsSlice\";\r\n\r\nexport const History = () => {\r\n    const allTransactions = useSelector(selectAllTransactions);\r\n\r\n    const dispatch = useDispatch();\r\n    const handleRemoveTransaction = id => dispatch(removeTransaction(id));\r\n\r\n    const transactions = allTransactions.map(transaction => {\r\n        const { title, amount, id } = transaction;\r\n\r\n        return (\r\n            <li\r\n                key={amount + title}\r\n                className={amount.toString().includes(\"-\") ? \"box negative\" : \"box positive\"}\r\n                onClick={() => handleRemoveTransaction(id)}>\r\n                <p>{title}</p>\r\n                <span>{`#${amount}`}</span>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {transactions.length !== 0 &&\r\n                <section className=\"history stack\">\r\n                    <h2>History</h2>\r\n                    <hr />\r\n                    <p className=\"instructions\">Click on Transaction to Delete</p>\r\n                    <ul className=\"stack split\">{transactions}</ul>\r\n                </section>\r\n            }\r\n            {transactions.length === 0 &&\r\n                <section className=\"history stack\">\r\n                    <h2>History</h2>\r\n                    <hr />\r\n                    <p className=\"instructions\">No Transaction to Display</p>\r\n                </section>\r\n            }\r\n        </>\r\n    );\r\n};","import React from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllTransactions } from \"../redux/transactionsSlice\";\r\n\r\nexport const Balance = () => {\r\n    const allTransactions = useSelector(selectAllTransactions);\r\n\r\n    const transactionAmount = allTransactions.map(expenses => expenses.amount);\r\n\r\n    const expenses = transactionAmount.filter(expenses => expenses < 0)\r\n        .reduce((acc, amount) => acc + amount, 0);\r\n\r\n    const income = transactionAmount.filter(expenses => expenses > 0)\r\n        .reduce((acc, amount) => acc + amount, 0);\r\n\r\n    const balance = expenses + income;\r\n\r\n    return (\r\n        <section className=\"stack split\">\r\n            <h2>Balance</h2>\r\n            <hr />\r\n            <h3>Your Balance: {`#${balance.toFixed(2)}`}</h3>\r\n            <section className=\"balance box\">\r\n                <section className=\"box\">\r\n                    <h4>Income</h4>\r\n                    <p>{`#${income.toFixed(2)}`}</p>\r\n                </section>\r\n                <section className=\"box\">\r\n                    <h4>Expenses</h4>\r\n                    <p>{`#${expenses.toFixed(2)}`}</p>\r\n                </section>\r\n            </section>\r\n        </section>\r\n    );\r\n};","import React from \"react\";\r\nimport \"./styles/layout.css\";\r\nimport \"./styles/components.css\";\r\nimport { NewTransaction } from \"./components/NewTransaction\";\r\nimport { History } from \"./components/History\";\r\nimport { Balance } from \"./components/Balance\";\r\n\r\nexport const App = () => {\r\n    return (\r\n        <>\r\n            <header className=\"center\">\r\n                <h1>Expense Tracker</h1>\r\n            </header>\r\n\r\n            <main className=\"switcher\">\r\n                <section>\r\n                    <NewTransaction />\r\n                    <Balance />\r\n                    <History />\r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n};","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport transactionReducer from \"./transactionsSlice\";\r\n\r\nconst reducers = {\r\n    transactions: transactionReducer,\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: reducers,\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {App} from \"./App\";\r\nimport {store} from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}